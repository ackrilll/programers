package nbc._3주차_;
// 객체 지향 이해하기
/*객체 -> 식별이 가능한 모든 물체로 속성(필드)과 행위(메서드)로 구분
객체 사이의 관계 ->
1. 사용관계 -> 사람과 차처럼 독립적인 객체
2. 포함관계 -> 차와 타이어,문,핸들
3. 상속관계 -> 기계시스템과 차, 기차
객체지향 프로그래밍 특징
1. 캡슐화
1) 필드와 메서드를 하나로 묶어 객체로 만들어 외부에서는 알 수 없게 감추는 것
2) public -> 접근 제어자

2. 상속
1) 부모 객체와 자식 객체관계에서 부모 객체는 가지고 있는 필드와 메서드를 자식 객체에게 물려줌
2) overiding -> 물려받은 것 가공해서 사용

3. 추상화
1) 공통적이고 중요한 것들을 모아 객체를 모델링함

클래스 -> 객체를 만들기 위한 설계도
실제로 객체가 클래스에 의해 만들어지는 것을 인스턴스화 라고 부르고 인스턴스 라고도 부름*/

public class _01_ {
    public static void main(String[] args) {

    }
}
